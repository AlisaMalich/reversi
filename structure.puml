@startuml

enum Player{
    enum
}

class Board{
    size: int
    matrix
    get_cell(row, col)
    update_cell(row, col, player)
}

class Game{
    board:Board
    current_player:Player

    is_valid_move(row, col)
    check_direction(row, col)
    make_move(row, col)
    change_player()
}

abstract class GameView{
    game: Game
    {abstract} get_move()
}

class GameConsoleView{
    game: Game
    get_move()
}

abstract class BoardView{
    board:Board
    {abstract} draw_board()
}

class BoardConsoleView{
    board:Board
    symbols
    draw_board()
}

class GameController{
    view: GameConsoleView
    model: Game
    run_game()
}

Game *-- Board
Game *-- Player
BoardConsoleView <|-- BoardView
BoardConsoleView *-- Board
GameConsoleView <|-- GameView
GameConsoleView *-- Game
GameView *-- Game
GameController *-- GameConsoleView
GameController *-- Game
GameConsoleView *--BoardConsoleView


